server.port = 9080

spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url = jdbc:postgresql://172.17.9.237:5432/trello

spring.datasource.username = postgres
spring.datasource.password = postgres

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=uz.genesis.trello.dao.TrelloSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jackson.default-property-inclusion=NON_NULL

spring.main.allow-bean-definition-overriding=true

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=8MB
# Max Request Size
spring.servlet.multipart.max-request-size=10MB

## File Storage Properties
file.prop.upload-dir=/nfs/trello/uploads/

oauth2.clientId=spring-security-oauth2-read-write-client
#server.oauth.url=http://localhost:9080/oauth
oauth2.clientSecret=spring-security-oauth2-read-write-client-password1234
server.oauth.url=http://localhost:9080/oauth

logging.path = /log/tmp/
logging.file = /log/tmp/kpi_trello.log
logging.level.org.zalando.logbook=TRACE
logbook.exclude=/api/v1/resource/**


# Whether to check that the change log location exists.
spring.liquibase.check-change-log-location=true
# Whether to enable Liquibase support.
spring.liquibase.enabled=false

# All files uploaded through the REST API will be stored in this directory
service.prop.ip=localhost
service.prop.port=9080
service.prop.url=trello.uz

# PlayMobile properties
service.sms.ip=91.204.239.42
service.sms.port=8083
service.sms.path=/broker-api/send
service.sms.token=StopUzcard:S4#!oUz5cAr
service.sms.originator=5800

# Gmail smtp properties
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.gmail.com
spring.mail.username=tuit.develop@gmail.com
spring.mail.password=eizcvkicxvswnzrl
spring.mail.port=587
spring.mail.protocol=smtp
spring.mail.test-connection=false
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com