server.port = 9080

spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url = jdbc:postgresql://172.17.9.237:5432/trello

spring.datasource.username = postgres
spring.datasource.password = postgres

spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=uz.genesis.trello.dao.TrelloSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jackson.default-property-inclusion=NON_NULL

spring.main.allow-bean-definition-overriding=true

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=8MB
# Max Request Size
spring.servlet.multipart.max-request-size=10MB

## File Storage Properties
file.prop.upload-dir=/nfs/trello/uploads/

oauth2.clientId=spring-security-oauth2-read-write-client
#server.oauth.url=http://localhost:9080/oauth
oauth2.clientSecret=spring-security-oauth2-read-write-client-password1234
server.oauth.url=http://localhost:9080/oauth

logging.path = /log/tmp/
logging.file = /log/tmp/kpi_trello.log
logging.level.org.zalando.logbook=TRACE
